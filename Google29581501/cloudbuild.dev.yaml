steps:

#- name: gcr.io/cloud-builders/gcloud
#  id: 'DecryptAppSettings'
#  args: 
#  - kms
#  - decrypt
#  - '--project=$PROJECT_ID'
#  - '--ciphertext-file=Google29581501/appsettings.json.enc'
#  - '--plaintext-file=Google29581501/appsettings.json'
#  - '--location=europe-west1'
#  - '--keyring=CLOUDBUILD-SECRETS'
#  - '--key=CLOUDBUILD-KEY'

- name: 'docker'
  id: 'BuildImage'
  args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/google29581501:$SHORT_SHA', '-t', 'gcr.io/$PROJECT_ID/google29581501:${_APP_ENV}', '-f', 'Google29581501/Dockerfile', '.']
  waitFor: ['-']
# Step:2a = Store image SHA
- name: 'gcr.io/cloud-builders/docker'
  id: 'StoreImageSha'
  args: ['push', 'gcr.io/$PROJECT_ID/google29581501:$SHORT_SHA']
  waitFor: ['BuildImage']
# Step:2b = Store image _APP_ENV
- name: 'gcr.io/cloud-builders/docker'
  id: 'StoreImageAppEnv'
  args: ['push', 'gcr.io/$PROJECT_ID/google29581501:${_APP_ENV}']
  waitFor: ['BuildImage']
# Step:3 = Deploy service
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'DeployService'
  entrypoint: 'gcloud'
  args: ['app', 'deploy', '--image-url=gcr.io/$PROJECT_ID/google29581501:${_APP_ENV}', '--version', '${_VERSION}']
  waitFor: ['StoreImageAppEnv']

timeout: 1800s